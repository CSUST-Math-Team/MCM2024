%--------------------------------------------------------------------------
%                          基于图像资料的数据重建与拟合
%--------------------------------------------------------------------------

%*******************************读取图像数据********************************
IM = imread('examp0A_01.bmp');  %读入一幅图片
whos  IM    % 查看数组I的大小和类型


%********************************去除坐标框*********************************
Red = IM(:,:,1);    % 提取红色灰度值矩阵
Rrow = sum(Red,2);    % 将红色灰度值矩阵每行上的元素相加，得到列向量Rrow
% 将Rrow中元素从小到大排序，去掉多余的重复元素，返回排序后向量a和索引向量idrow
[a,idrow] = unique(Rrow);
% 返回Rrow中最小和次小元素所在的行号，即可定位上、下坐标框位置
idrow = idrow(1:2)

Rcol = sum(Red);    % 将红色灰度值矩阵每列上的元素相加，得到行向量Rcol
% 将Rcol中元素从小到大排序，去掉多余的重复元素，返回排序后向量b和索引向量idcol
[b,idcol] = unique(Rcol);
% 返回Rcol中最小和次小元素所在的列号，即可定位左、右坐标框位置
idcol = idcol(1:2)

% 提取坐标框内部的图像数据
I = IM(min(idrow):max(idrow),min(idcol):max(idcol),:);
m = size(I, 1)    %查看I的行数
n = size(I, 2)    %查看I的列数

imshow(I)    % 显示处理后图像


%**************************提取图中曲线上点的像素坐标************************
% 定位蓝色像素点
BluePoints = (I(:,:,1) == 0 & I(:,:,2) == 0 & I(:,:,3) == 255);
[ypixel,xpixel] = find(BluePoints);    % 得到曲线上点的像素坐标
size(xpixel)    %查看x的大小，即可知从曲线上提取到的点的个数


%**************************将像素坐标转换为实际坐标**************************
x_xishu = 1/(n-1);    %水平方向上一个像素所代表的实际尺寸
y_xishu = 9/(m-1);    %竖直方向上一个像素所代表的实际尺寸
xreal = (xpixel-1)*x_xishu;    %曲线上点的真实的横坐标
yreal = -11-(ypixel-1)*y_xishu;    %曲线上点的真实的纵坐标


%**********************************曲线拟合*********************************
% 定义回归方程对应的匿名函数
fun = @(a,x)[a(1)+a(2)/2*(x-0.17).^2+a(3)/4*(x-0.17).^4];
% 作非线性回归，求回归方程中的未知参数
a = nlinfit(xreal,yreal,fun,[0, 0, 0])


%*******************************绘制重建的曲线******************************
yp = fun(a, xreal);    % 计算xreal对应的纵坐标的估计值
plot(xreal,yp);    % 作出重建的曲线图形
xlabel('X');    % 为X轴加标签
ylabel('Y = f(X)');    % 为Y轴加标签
% 在图形上点(0.05,-12)处添加曲线方程
text('Interpreter','latex',...
	'String',['$$-19.6749+\frac{22.2118}{2}(x-0.17)^2'...
    '+\frac{5.0905}{4}(x-0.17)^4$$'],'Position',[0.05, -12],...
	'FontSize',12);
